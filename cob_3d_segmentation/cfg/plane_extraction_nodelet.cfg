#!/usr/bin/env python
# field of view configuration

PACKAGE="cob_3d_segmentation"
#import roslib; roslib.load_manifest(PACKAGE)

from math import pi

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("file_path", str_t, 1, "Path for storing results", "/tmp/")
gen.add("save_to_file", bool_t, 2, "Save results", False)
gen.add("plane_constraint", int_t, 3, "0=NONE, 1=HORIZONTAL, 2=VERTICAL", 0)
gen.add("mode_action", bool_t, 4, "Use action or topic mode", False)
gen.add("target_frame", str_t, 5, "The frame input data is transformed to", "/map")
gen.add("passthrough_min_z", double_t, 6, "Minimum z value for pass-through filter", -0.1, -1, 5)
gen.add("passthrough_max_z", double_t, 7, "Maximum z value for pass-through filter", 3, -1, 5)
gen.add("vox_leaf_size", double_t, 8, "Voxel resolution for down-sampling", 0.04, 0.001, 0.2)
gen.add("cluster_tolerance", double_t, 8, "Minimum distance between points for clustering", 0.05, 0.01, 0.2)
gen.add("min_plane_size", double_t, 8, "Minimum number of inliers for planes", 50, 10, 500)
gen.add("alpha", double_t, 8, "Alpha value for convex hull", 0.2, 0.01, 1)
#gen.add("normal_radius", double_t, 8, "COMMENT", 0.1, 0.01, 0.4)

exit(gen.generate(PACKAGE, "dynamic_reconfigure_node", "plane_extraction_nodelet"))
